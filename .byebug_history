c
@user
n
@user
c
@user
c
@user
c
@user
c
@user
c
self
current_user
self
n
c
user.email
user
n
c
@email
n
@email
c
n
UserMailer.with(@email).welcome_email.deliver_now
@email
n
@email
c
self.email
self
c
self.email
self
c
self
c
n
self.email
self.first_name
self
c
n
c
@email
n
@email
c
User.last.email
User.last
@user
n
@user
c
welcome_email
n
welcome_email
after_create
c
@email
n
c
@booking.user.email
@booking.user
@booking
n
c
@booking = Booking.last
Booking.last
Booking
user.email
user
User.last
User
@a
n
@a
@a = @current_user
a = current_user
a = Current_user
User.email
User.last.email
User.last
User
c
n
c
@user
c
@current_user
@email
n
@booking
n
@booking
c
current_user.email
current_user
@user
c
n
mail(to: 'khushbushakya41@gmail.com', subject: "Your Booking is confirmed!")
@booking
n
@booking
c
n
c
n
c
BookingMailer.with(booking: @booking).new_booking_email.deliver_now
n
c
BookingMailer.with(booking: @booking).new_booking_email.deliver_now
BookingMailer.with(booking: @booking).new_booking_email.deliver_later
n
c
BookingMailer.with(booking: @booking).new_booking_email.deliver_later
n
c
n
@booking.save
@booking
c
@booking.save
@booking
n
@booking
n
@booking
c
@booking
c
n
@booking.save
n
@booking.save
@bboking.save
c
cc
c
cc
c
params
c
@trip
c
@trip
c
params
@trip
c
params
@trip
c
@trip = @trip.where("start_date >= :start_date AND end_date <= :end_date",{start_date: params[:start_date], end_date: params[:end_date]})
!params[:start_date].blank? && !params[:end_date].blank?
!params[:trip_type].blank?
!params[:search].blank?
 @trip = Trip.all
c
params
c
n
c
format.json { render :json => @trip }
format.html { render :show }
format.json { render :json => @trip }
@trip
c
@trip
format.json { render :json => @trip }
c
  format.html { render :show }
c
 format.html { render :show }
c
format.json { render :json => @trip }
c
format.html { render :show }
c
format.json { render :json => @trip, each_serializer: TripSerializer }
n
 format.html { render :show }
c
@trip.present?
n
@trip.present?
n
@trip.present?
Trip.find(341)
Trip.find(1)
Trip.find(params[:id])
params
c
@trip
c
@trip
n
@trip
n
c
n
@destination
n
c
@b.nil?
@b.empty?
n
@b
c
@trip
c
params
c
params
c
params
c
cc
c
@a
c
params
c
params
c
n
@trip
n
@trip
c
@trip
n
@trip
c
params
c
@a.trips
@.trips
@a
n
@a
c
params
c
@b.empty?
@b
c
params
c
params[:start_date].blank? && params[:end_date].blank? && params[:search].blank? && params[:trip_type].blank? && params[:min].blank? && params[:max].blank?
c
